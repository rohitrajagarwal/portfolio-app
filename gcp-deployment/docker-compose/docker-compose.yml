version: '3.9'  # Latest stable version

services:

  # Database Service (MySQL)
  database:
    build:
      context: ../database
      dockerfile: Dockerfile
    container_name: portfolio-database
    ports:
      - "3306:3306"
    networks:
      - portfolio-network
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/mysql
      - db_logs:/var/log/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=commPass@123.
      - MYSQL_DATABASE=portfolio_app
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pcommPass@123."]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Backend Service (Node.js)
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: portfolio-backend
    ports:
      - "3000:3000"
    networks:
      - portfolio-network
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    environment:
      - DB_HOST=portfolio-database
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=commPass@123.
      - DB_NAME=portfolio_app
      - CONN_LIMIT=10
      - SSL=false
      - FRONTEND_URL=http://localhost
    command: ["npm", "start"]

  # Frontend Service (React)
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: portfolio-frontend
    ports:
      - "80:80"
    networks:
      - portfolio-network
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_started
    environment:
      - REACT_APP_BACKEND_URL=http://portfolio-backend:3000
    command: ["npm", "start"]

networks:
  portfolio-network:
    driver: bridge 


volumes:
  db_data: 
    driver: local
  db_logs:
    driver: local
  frontend_data:
    driver: local
  backend_data:
    driver: local
  database_data:
    driver: local
  logs_data:
    driver: local
  static_files:
    driver: local
  media_files:
    driver: local
  cache_data:
    driver: local
  temp_data:
    driver: local
  config_data:
    driver: local
  secrets_data:
    driver: local
  backups_data:
    driver: local
  logs:
    driver: local
  database_logs:
    driver: local